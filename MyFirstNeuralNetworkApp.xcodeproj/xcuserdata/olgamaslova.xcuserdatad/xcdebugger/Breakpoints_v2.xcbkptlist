<?xml version="1.0" encoding="UTF-8"?>
<Bucket
   type = "1"
   version = "2.0">
   <Breakpoints>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            shouldBeEnabled = "No"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "MyFirstNeuralNetworkApp/ViewController.swift"
            timestampString = "544002024.298353"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "78"
            endingLineNumber = "78"
            landmarkName = "detect(image:)"
            landmarkType = "7">
            <Locations>
               <Location
                  shouldBeEnabled = "No"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 (__ObjC.VNRequest, Swift.Optional&lt;Swift.Error&gt;) -&gt; () in MyFirstNeuralNetworkApp.ViewController.detect(image: __ObjC.CIImage) -&gt; ()"
                  moduleName = "MyFirstNeuralNetworkApp"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/olgamaslova/Documents/Deep/SqueezeNet-Swift/MyFirstNeuralNetworkApp/ViewController.swift"
                  timestampString = "543930541.099553"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "101"
                  endingLineNumber = "101"
                  offsetFromSymbolStart = "640">
               </Location>
               <Location
                  shouldBeEnabled = "No"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 () -&gt; () in closure #1 (__ObjC.VNRequest, Swift.Optional&lt;Swift.Error&gt;) -&gt; () in MyFirstNeuralNetworkApp.ViewController.detect(image: __ObjC.CIImage) -&gt; ()"
                  moduleName = "MyFirstNeuralNetworkApp"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/olgamaslova/Documents/Deep/SqueezeNet-Swift/MyFirstNeuralNetworkApp/ViewController.swift"
                  timestampString = "543930541.101662"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "92"
                  endingLineNumber = "92"
                  offsetFromSymbolStart = "20">
               </Location>
            </Locations>
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            shouldBeEnabled = "No"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "MyFirstNeuralNetworkApp/FrameExtractor.swift"
            timestampString = "544002024.299122"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "113"
            endingLineNumber = "113"
            landmarkName = "captureOutput(_:didOutput:from:)"
            landmarkType = "7">
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            shouldBeEnabled = "No"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "MyFirstNeuralNetworkApp/ViewController.swift"
            timestampString = "544002024.299427"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "57"
            endingLineNumber = "57"
            landmarkName = "previewLayer(previewLayer:)"
            landmarkType = "7">
         </BreakpointContent>
      </BreakpointProxy>
   </Breakpoints>
</Bucket>
